# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: bookstack

---

# Secrets
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: bookstack
type: Opaque
data:
  jwt-secret: <BASE64_ENCODED_JWT_SECRET>
  mongo-uri: <BASE64_ENCODED_MONGO_URI>

---

# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: bookstack
data:
  NODE_ENV: "production"
  PORT: "5000"

---

# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookstack-backend
  namespace: bookstack
  labels:
    app: bookstack-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookstack-backend
  template:
    metadata:
      labels:
        app: bookstack-backend
    spec:
      containers:
        - name: bookstack-backend
          image: <AWS_ACCOUNT_ID>.dkr.ecr.<AWS_REGION>.amazonaws.com/bookstack-ci-backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: NODE_ENV
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: PORT
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: mongo-uri
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1024Mi"

---

# Service
apiVersion: v1
kind: Service
metadata:
  name: bookstack-backend-service
  namespace: bookstack
spec:
  type: LoadBalancer
  selector:
    app: bookstack-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
